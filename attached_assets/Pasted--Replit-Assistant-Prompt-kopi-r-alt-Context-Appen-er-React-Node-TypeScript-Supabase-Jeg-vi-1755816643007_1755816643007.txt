🔧 Replit Assistant Prompt (kopiér alt)

Context
Appen er React + Node/TypeScript + Supabase. Jeg vil ha en komplett “Send feedback”-flyt med UI, API, e‑post (Microsoft 365) og lagring i Supabase.

Do this end‑to‑end

Opprett en Supabase-tabell:

Navn: feedback

Kolonner:

id uuid primary key default gen_random_uuid()

created_at timestamptz default now()

user_id uuid null (hvis innlogget bruker finnes)

email text null

type text not null check (type in ('Bug','Feature','Question'))

severity text not null check (severity in ('Critical','High','Medium','Low'))

message text not null

metadata jsonb null

screenshot_url text null

status text not null default 'New' check (status in ('New','Triaged','In Progress','Resolved','Closed'))

Skriv SQL migrasjon + enkel RLS:

RLS ON

Policy “users can insert their own feedback”: allow insert for authenticated, no restriction.

Policy “admins can select all”: create a role claim role = 'admin' check on select.

Policy “users can select their own”: user_id = auth.uid().

Backend (Node/Express eller Vite/Node server — finn eksisterende serverfil og utvid):

Lag route POST /api/feedback som tar JSON:

{
  "type": "Bug" | "Feature" | "Question",
  "severity": "Critical" | "High" | "Medium" | "Low",
  "message": string,
  "email": string | null,
  "screenshotBase64": string | null, // optional PNG/JPEG
  "context": object | null // f.eks. user agent, current page, app version
}


Valider payload (zod eller egen validering).

Hvis screenshotBase64 finnes: last opp til Supabase Storage bucket feedback-shots/ og få public URL (opprett bucket hvis den ikke finnes).

Sett user_id fra Supabase auth (hvis tilgjengelig) eller null.

Lagre raden i feedback.

Send e‑post til support@forhandlerpro.no via Nodemailer med Microsoft 365 SMTP:

host: smtp.office365.com, port: 587, secure: false, TLS: true

auth: SMTP_USER, SMTP_PASS (les fra env)

from: Support <support@forhandlerpro.no>

to: support@forhandlerpro.no

subject: [Feedback] ${type} | ${severity}

html-body med feltene + lenke til screenshot + feedback.id

Rate limit: maks 10 requests pr IP/time (bruk express-rate-limit).

Returner { ok: true, id } ved suksess, ellers 400/500.

Env vars (legg i Replit Secrets):

SUPABASE_URL

SUPABASE_SERVICE_ROLE (for server-side inserts hvis du bruker service key)

SUPABASE_ANON_KEY (for client)

SMTP_HOST=smtp.office365.com

SMTP_PORT=587

SMTP_USER=support@forhandlerpro.no

SMTP_PASS=<app-passord eller konto-passord>

SUPABASE_STORAGE_BUCKET=feedback-shots

APP_ENV=production (for å skru på strengere CORS hvis nødvendig)

Frontend (React + Tailwind/shadcn):

Legg en knapp “Gi tilbakemelding” i toppbaren.

Når klikket: åpne en modal med feltene:

Type (select: Bug/Feature/Question)

Alvorlighetsgrad (Critical/High/Medium/Low)

Beskrivelse (textarea, required)

E‑post (optional, prefill fra brukerprofil om tilgjengelig)

Skjermbilde-opplasting (png/jpg) — konverter til base64 før submit

“Send” + “Avbryt”

Ved submit: POST /api/feedback.

Hvis ok: vis toast “Takk! Vi har mottatt tilbakemeldingen din.”

Nullstill skjema.

Kodekrav:

TypeScript overalt.

Bruk zod for request-validering og @supabase/supabase-js for Storage.

Lag lib/supabaseServer.ts og lib/supabaseClient.ts hvis de ikke finnes.

Lag lib/mailer.ts med Nodemailer-klient lest fra env.

Lag lib/rateLimit.ts for express-rate-limit.

Sørg for CORS kun fra appens origin.

Skriv enhetstester for valideringsskjema.

Ikke sjekk inn hemmeligheter.

UX‑detaljer:

Modal har hjelpetekst:

“For kritiske driftsfeil – legg ved skjermbilde hvis mulig.”

Prefill context: aktuell URL, browser, app-versjon (les fra env), orgnavn/brukerid hvis logget inn.

Link i “Takk”-toast: “Se status på saken din” → (placeholder) vi viser id i toast.

Deliverables

SQL migrasjon for feedback + RLS

Backend route /api/feedback med validering, lagring, e‑post, rate limit

Supabase Storage bucket opprettelse i kode (idempotent)

Frontend komponent FeedbackButton og FeedbackModal (shadcn UI)

lib/mailer.ts, lib/supabaseServer.ts, lib/rateLimit.ts

Instruks i README: hvilke secrets å sette i Replit

Eksempel .http fil (REST Client) for manuell testing av /api/feedback

Extra

Legg til mulighet for å sende fra alias-adresser (Reply-To=brukerens e‑post hvis oppgitt).

Hvis severity er Critical: sett høy prioritet i e‑post headers.

Etterpå – sett hemmeligheter i Replit

Åpne Secrets → legg inn verdiene listet i punkt 3.

Test med et lite skjermbilde og en “Bug” for å bekrefte at:

Rad opprettes i feedback

Fil lastes til feedback-shots

E‑post lander i support@forhandlerpro.no